.. _摆数模块:

摆数模块
=================

摆数模块是在推理场景中用于加速Device端卷积类计算的常见方法。通过在Host端对卷积计算的卷积核或偏置进行预处理，以满足在Device端计算时对数据的类型和布局的需求，从而减少Device端的开销，加速整个计算过程。

摆数模块的益处
-----------------------

在推理场景中，一个网络可能会被循环执行几万次甚至几十万次，没有经过摆数模块的卷积类算子也会做同样次数的卷积核或偏置的预处理操作。然而，卷积核与偏置的相关信息都是已知的，所以可以只调用一次摆数模块对卷积核和操作进行预处理，在循环调用卷积类算子时就可以减去预处理卷积核或偏置的时间，从而提升网络的推理性能。

摆数模块的使用场景
-----------------------

由于摆数模块对性能的收益，推荐在推理场景中，在每一个卷积类算子计算之前都使用摆数模块对卷积核或偏置进行预处理。目前，该功能支持Convolution和Deconvolution算子，接口详情参考《Cambricon CNNL Developer Guide》。


摆数模块的使用方法
---------------------

.. attention::
   | - 在调用摆数模块之前，应确保卷积类算子或融合算子的相关参数（如 ``cnnlConvolutionDescriptor_t``、``cnnlTensorDescriptor_t`` 等）已经设置完成。
   | - 摆数模块一定要在卷积类算子计算之前调用。
   | - 当卷积核的数据类型为浮点或数据布局不是最佳的NHWC时，必须调用摆数模块。
   | - 当偏置需要转数时，必须调用摆数模块。

详细使用过程如下所示，以卷积算子Convolution为例：

1. 调用 ``cnnlSetConvolutionDescriptorReorderType`` 接口设置卷积核或偏置的 ``Reorder Type`` 为CNNL_REORDER。
2. 调用 ``cnnlGetReorderConvDataSize`` 接口获得用于存放摆数模块输出的卷积核与偏置的空间的大小。
3. 调用 ``cnnlHostReorderConvData`` 接口对卷积核以及偏置进行摆数。

相关接口以及结构体的详细说明，请参考《Cambricon CNNL Developer Guide》。
