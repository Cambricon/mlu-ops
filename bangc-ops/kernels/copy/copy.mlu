/*************************************************************************
 * Copyright (C) [2022] by Cambricon, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *************************************************************************/
#include "copy_mlu.h"

__mlu_global__ void MLUUnion1KernelCopy(void *input, void *output,
                                        size_t num_element, int dtype_size);

__mlu_global__ void MLUUnion1KernelCopyWithStride(
    void *input, TensorShape input_shape, void *output,
    TensorShape output_shape, size_t num_element, int dtype_size, bool use_SMC);

void MLUOP_WIN_API mluOpUnion1KernelCopy(cnrtDim3_t k_dim,
                                         cnrtFunctionType_t k_type,
                                         cnrtQueue_t queue, const void *input,
                                         void *output, const size_t num_element,
                                         const int dtype_size) {
  MLUUnion1KernelCopy<<<k_dim, k_type, queue>>>((void *)input, (void *)output,
                                                num_element, dtype_size);
}

void MLUOP_WIN_API mluOpUnion1KernelCopyWithStride(
    cnrtDim3_t k_dim, cnrtFunctionType_t k_type, cnrtQueue_t queue,
    const void *input, TensorShape input_shape, void *output,
    TensorShape output_shape, const size_t num_element, const int dtype_size,
    const bool use_SMC) {
  MLUUnion1KernelCopyWithStride<<<k_dim, k_type, queue>>>(
      (void *)input, input_shape, (void *)output, output_shape, num_element,
      dtype_size, use_SMC);
}
