[mlu-ops]

[bangc-ops.kernels]

# # bangc-ops API dependencies: only bangc-ops/kernels/<> compile depedencies
# ##  format:
# ##  <kernel_name> = ["op_1", "op_2"]

abs = ["unary_op"]
copy = ["tensor_stride_process"]
div = ["binary_op"]
expand = ["copy"]
fill = ["tensor_stride_process"]
log = ["unary_op"]
psroipool = ["fill_zero"]
roi_align_rotated = ["fill"]
roi_crop = ["fill_zero"]
rotated_feature_align = ["fill"]
sqrt = ["binary_op", "unary_op"]
tensor_stride_process = ["copy"]
roiaware_pool3d = ["fill","transpose"]
voxelization = ["fill_zero"]
get_indice_pairs = ["fill", "scatter_nd", " gather_nd", "reduce", "unique"]
yolo_box = ["fill_zero"]
deform_roi_pool = ["fill"]
indice_convolution_backward_filter = ["fill", "transpose", "gather_nd", "matmul"]
indice_convolution_forward = ["fill", "gather_nd", "matmul", "scatter_nd", "transpose"]
three_nn_forward = ["transpose"]


[bangc-ops.gtest]

# # mlu_op_gtest API dependencies under mlu_op_gtest/pb_gtest/src/zoo/<op>
# ## If mlu_op_gtest use dlopen to call mluops, dependencies below may not be necessary

psroipool_backward = ["psroipool"]
psroipool_forward = ["psroipool"]
roi_align_rotated_forward = ["roi_align_rotated"]
roi_align_rotated_backward = ["roi_align_rotated"]
roiaware_pool3d_forward = ["roiaware_pool3d"]
roiaware_pool3d_backward = ["roiaware_pool3d"]
roi_crop_backward = ["roi_crop"]
roi_crop_forward = ["roi_crop"]
rotated_feature_align_backward = ["rotated_feature_align"]
rotated_feature_align_forward = ["rotated_feature_align"]
voxel_pooling_forward = ["fill"]
indice_convolution_backward_data = ["fill", "scatter_nd", "gather_nd", "transpose", "matmul", "add_n"]
indice_convolution_forward = ["fill", "gather_nd", "matmul", "scatter_nd", "transpose"]
sqrt_backward = ["sqrt"]
psamask_forward = ["psamask"]
psamask_backward = ["psamask"]
three_interpolate_forward = ["three_interpolate"]
three_interpolate_backward = ["three_interpolate"]
active_rotated_filter_forward = ["active_rotated_filter"]
deform_roi_pool_forward = ["deform_roi_pool"]
deform_roi_pool_backward = ["deform_roi_pool"]
carafe_forward = ["carafe"]
carafe_backward = ["carafe", "fill", "tensor_stride_process"]

